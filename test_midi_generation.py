#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ MIDI
"""

import os
import sys
from ai_utils.use_model import generate_midi

def test_midi_generation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é MIDI-—Ñ–∞–π–ª–∞"""
    try:
        print("üéµ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ MIDI...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤ –º–æ–¥–µ–ª–∏
        current_dir = os.path.dirname(os.path.abspath(__file__))
        ai_utils_dir = os.path.join(current_dir, 'ai_utils')
        
        tokenizer_path = os.path.join(ai_utils_dir, 'tokenizer.pt')
        model_path = os.path.join(ai_utils_dir, 'transformer_epoch_7.pt')
        
        if not os.path.exists(tokenizer_path):
            print(f"‚ùå –§–∞–π–ª —Ç–æ–∫–µ–Ω–∏–∑–∞—Ç–æ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: {tokenizer_path}")
            return False
            
        if not os.path.exists(model_path):
            print(f"‚ùå –§–∞–π–ª –º–æ–¥–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: {model_path}")
            return False
        
        print("‚úÖ –§–∞–π–ª—ã –º–æ–¥–µ–ª–∏ –Ω–∞–π–¥–µ–Ω—ã")
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º MIDI
        print("üéº –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º MIDI-—Ñ–∞–π–ª...")
        midi_data = generate_midi(temperature=1.2)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
        test_output_path = os.path.join(current_dir, 'test_generated.mid')
        midi_data.write(test_output_path)
        
        print(f"‚úÖ MIDI-—Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {test_output_path}")
        print(f"üìÅ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {os.path.getsize(test_output_path)} –±–∞–π—Ç")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return False

if __name__ == "__main__":
    success = test_midi_generation()
    if success:
        print("\nüéâ –¢–µ—Å—Ç –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ! –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.")
    else:
        print("\nüí• –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.")
        sys.exit(1) 